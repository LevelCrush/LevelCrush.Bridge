name: Dynasty Trader Tests

on:
  push:
    branches: [ main, feature/*, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test Dynasty Trader
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: timescale/timescaledb:latest-pg15
        env:
          POSTGRES_USER: dynasty_test
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: dynasty_trader_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v3
    
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
    
    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Cache cargo index
      uses: actions/cache@v3
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Cache cargo build
      uses: actions/cache@v3
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Create test env file
      run: |
        cat > .env.dynasty <<EOF
        DATABASE_URL=postgresql://dynasty_test:test_password@localhost:5432/dynasty_trader_test
        JWT_SECRET=test_secret_key_for_ci
        HOST=127.0.0.1
        PORT=3113
        EOF
    
    - name: Run migrations
      run: |
        cargo install sqlx-cli --no-default-features --features postgres
        sqlx database create || true
        sqlx migrate run --source migrations/postgres
      env:
        DATABASE_URL: postgresql://dynasty_test:test_password@localhost:5432/dynasty_trader_test
    
    - name: Seed test data
      run: |
        psql -h localhost -U dynasty_test -d dynasty_trader_test -f migrations/postgres/003_items_and_seed_data.sql
      env:
        PGPASSWORD: test_password
    
    - name: Run unit tests
      run: cargo test --lib
    
    - name: Run integration tests
      run: |
        cargo test --test market_unit_tests
        cargo test --test websocket_test
        # Dynasty integration tests require a real database
        # cargo test --test dynasty_integration_test
    
    - name: Build Dynasty Trader binary
      run: cargo build --bin dynasty_trader
    
    - name: Check code formatting
      run: cargo fmt -- --check
    
    - name: Run clippy
      run: cargo clippy -- -D warnings

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: timescale/timescaledb:latest-pg15
        env:
          POSTGRES_USER: dynasty_test
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: dynasty_trader_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
    
    - name: Install tarpaulin
      run: cargo install cargo-tarpaulin
    
    - name: Create test env file
      run: |
        cat > .env.dynasty <<EOF
        DATABASE_URL=postgresql://dynasty_test:test_password@localhost:5432/dynasty_trader_test
        JWT_SECRET=test_secret_key_for_ci
        EOF
    
    - name: Run coverage
      run: cargo tarpaulin --out Xml --exclude-files src/bin/* --skip-clean
      env:
        DATABASE_URL: postgresql://dynasty_test:test_password@localhost:5432/dynasty_trader_test
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: ./cobertura.xml
        flags: unittests
        name: dynasty-trader-coverage